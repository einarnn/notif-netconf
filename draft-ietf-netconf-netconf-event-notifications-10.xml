<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="2"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="yes"?>
<rfc category="std" docName="draft-ietf-netconf-netconf-event-notifications-10"
     ipr="trust200902">
<front>
    <title abbrev="NETCONF-notif">NETCONF Support for Event Notifications</title>

        <author fullname="Eric Voit" initials="E." surname="Voit">
            <organization>Cisco Systems</organization>
            <address>
                <email>evoit@cisco.com</email>
            </address>
        </author>
        
        <author fullname="Alexander Clemm" initials="A" surname="Clemm">
            <organization>Huawei</organization>
            <address>
                <email>ludwig@clemm.org</email>
            </address>
        </author>

        <author fullname="Alberto Gonzalez Prieto" initials="A"
            surname="Gonzalez Prieto">
            <organization>VMware</organization>
            <address>
                <email>agonzalezpri@vmware.com</email>
            </address>
        </author>
        
        <author fullname="Einar Nilsen-Nygaard" initials="E"
            surname="Nilsen-Nygaard">
            <organization>Cisco Systems</organization>
            <address>
                <email>einarnn@cisco.com</email>
            </address>
        </author>
      
        <author fullname="Ambika Prasad Tripathy" initials="A" surname="Tripathy">
            <organization>Cisco Systems</organization>
            <address>
                <email>ambtripa@cisco.com</email>
            </address>
        </author>    
        

        <date day="2" month="July" year="2018"/>

        <area>Operations &amp; Management</area>

        <workgroup>NETCONF</workgroup>

        <keyword>Draft</keyword>

    <abstract>
    
      <t>This document provides a NETCONF binding to subscribed notifications and to YANG push.</t>
      
      <t>RFC Editor note: please replace the four references to pre-RFC normative drafts with the actual assigned RFC numbers.</t>
        
    </abstract>
</front>

<middle>
  <section title="Introduction">
       
    <t>This document provides a binding for events streamed over the NETCONF protocol <xref target="RFC6241"/> as per <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/>. In addition, as <xref target="I-D.ietf-netconf-yang-push"/> is itself built upon <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/>, this document enables a NETCONF client to request and receive updates from a YANG datastore located on a NETCONF server.</t>
    
  </section>

  <section title="Terminology">

    <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>
            
    <t>The following terms are defined in <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/>: notification message, event stream, publisher, receiver, subscriber, subscription, configured subscription.</t> 

  </section>


  <section title="Compatibility with RFC-5277's create-subscription">
     <t>A publisher is allowed to concurrently support configured subscriptions and dynamic subscription RPCs of <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> at the same time as <xref target="RFC5277"/>'s "create-subscription" RPC.  However a single NETCONF transport session cannot support both this specification and a subscription established by <xref target="RFC5277"/>'s "create-subscription" RPC. To protect against any attempts to use a single NETCONF transport session in this way:</t>
      
     <t><list style="symbols">
     
       <t>A solution must reply with the <xref target="RFC6241"/> error "operation-not-supported" if a "create-subscription" RPC is received on a NETCONF session where any other <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> or <xref target="RFC5277"/> subscription exists.</t>
       
       <t>It is a prohibited to send updates or state change notifications for a configured subscription on a NETCONF session where the create-subscription RPC has successfully <xref target="RFC5277"/> created subscription. </t> 
       <t>A "create-subscription" RPC MUST be rejected if any <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> or <xref target="RFC5277"/>subscription is active across that NETCONF transport session.</t>

     </list></t>

     <t>If a publisher supports this specification but not subscriptions via <xref target="RFC5277"/>, the publisher MUST NOT advertise "urn:ietf:params:netconf:capability:notification:1.0".</t>
     
  </section>
  
  
  <section title="Mandatory XML, event stream and datastore support">
    
    <t>The "encode-xml" feature of <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> is mandatory to support.  This indicates that XML is a valid encoding for RPCs, state change notifications, and subscribed content.</t>
    
    <t>A NETCONF publisher supporting event stream subscription via <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> MUST support the "NETCONF" event stream identified in that draft.</t>


    <t>A NETCONF publisher supporting <xref target="I-D.ietf-netconf-yang-push"/> MUST support the operational state datastore as defined by <xref target="RFC8342"/>.</t>
  </section>
  
  <section title="NETCONF connectivity and the subscription lifecycle">
  
    <t>This section describes how the availability of NETCONF transport impacts the establishment and lifecycle of different types of <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> subscriptions.</t>
  
    <section title="Dynamic Subscriptions">
  
      <t>For a dynamic subscription, if the NETCONF session involved with the "establish-subscription" terminates, the subscription MUST be deleted.</t>
      
      <t>For a dynamic subscription a "modify-subscription", "delete-subscription", or "resynch-subscription" RPC MUST be sent using same the NETCONF session upon which the referenced subscription was established.".</t>
      
    </section>
    
    <section title="Configured Subscriptions">
    
      <t>When a configured subscription enters the "valid" state, there is no guarantee a usable NETCONF transport session is currently in place with each associated receiver. As a result, the first configured subscription to a specific receiver MUST establish a NETCONF transport session via NETCONF call home <xref target="RFC8071"/>, section 4.1.  This transport session MUST then be used by additional configured subscriptions targeting that the same receiver.   This same receiver is identifiable on the publisher as one which targets the same IP address and port used to establish the existing NETCONF call home connection. This transport session MAY also be used by dynamic subscriptions and/or non-subscription related NETCONF operations originated by the NETCONF client.</t>
      
      <t>The method of identifying the targeted recevier IP address, port, and security credentials are left up to implementers of this specification.  For implementation guidance and a YANG model for this function, please look to <xref target="I-D.draft-ietf-netconf-netconf-client-server"/>.</t>
      
      <t>If the call home fails because the publisher receives receiver credentials which are subsequently declined per <xref target="RFC8071"/>, Section 4.1, step S5 authentication, then that receiver MUST be placed into the "timeout" state.</t>
    
      <t>If the call home fails to establish for any other reason, the publisher MUST NOT progress the receiver to the "active" state.   Additionally, the publisher SHOULD place the receiver into the "timeout" state after a predetermined number of either failed call home attempts or NETCONF sessions remotely terminated by the receiver.</t>
    
      <t>NETCONF transport session connectivity SHOULD be verified as described in <xref target="RFC8071"/>, Section 4.1, step S7.</t>
       
      <t>Until NETCONF transport with a receiver has been established, and a "subscription-started" state change notification has been successfully sent for a configured subscription, that subscription's receiver MUST remain in either the "connecting" or the "timeout" state.</t>

      <t>If a NETCONF session is disconnected but the "stop-time" of a subscription being transported over that session has not been reached, the publisher restarts the call home process and return the receiver to the "connecting" state.</t>
    
    </section>
    
  </section>
  
  <section title="Notification Messages">
    <t>Notification messages transported over the NETCONF protocol will use the "notification" message defined within <xref target="RFC5277"/>, section 4.</t>
    
    <t>All notification messages MUST use the NETCONF transport session used by the "establish-subscription" RPC.</t>
    
  </section>
  
  <section title="Dynamic Subscriptions and RPC Error Responses">
    <t>Management of dynamic subscriptions occurs via RPCs as defined in 
    <xref target="I-D.ietf-netconf-yang-push"/> and <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/>.  When an RPC error occurs, the NETCONF RPC reply MUST include an "rpc-error" element per <xref target="RFC6241"/> with the error information populated as follows:
     <list style="symbols">
      <t>an "error-type" node of "application".</t>

      <t>an "error-tag" node of "operation-failed".</t>

      <t>an "error-severity" of "error" (this MAY but does not
      have to be included). </t>

      <t>an "error-app-tag" node with the value being a string that corresponds to
      an identity associated with the error, as defined in 
      <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> section 2.4.6 for general subscriptions, 
      and <xref target="I-D.ietf-netconf-yang-push"/> Appendix A.1, for datastore subscriptions. The identityname to use depends on the RPC for which the error occurred.  Viable errors for different RPCs are as follows:</t>
    </list></t>
    
    <figure align="left">
            <artwork><![CDATA[
         RPC                     use base identity
         ----------------------  ----------------------------
         establish-subscription  establish-subscription-error     
         modify-subscription     modify-subscription-error
         delete-subscription     delete-subscription-error    
         kill-subscription       kill-subscription-error
         resynch-subscription    resynch-subscription-error
            ]]></artwork>
    </figure>
    
    <t>Each error identity will be inserted as the "error-app-tag" using JSON encoding following the form &lt;modulename&gt;:&lt;identityname&gt;.  An example of such as valid encoding would be "ietf-subscribed-notifications:no-such-subscription".</t>
    
    <t><list style="symbols">
      <t>In case of error responses to an "establish-subscription" or "modify-subscription" request there is the option of including an "error-info" node.  This node may contain XML-encoded data with hints for parameter settings that might lead to successful RPC requests in the future.   Following are the yang-data structures which may be returned:</t>
    </list></t>
    
    <figure align="left">
            <artwork><![CDATA[    
      establish-subscription returns hints in yang-data structure
      ---------------------- ------------------------------------         
      target: event stream   establish-subscription-stream-error-info
      target: datastore      establish-subscription-datastore-error-info
            
      modify-subscription    returns hints in yang-data structure
      ---------------------- ------------------------------------         
      target: event stream   modify-subscription-stream-error-info
      target: datastore      modify-subscription-datastore-error-info

      The yang-data included within "error-info" SHOULD NOT include the
      optional leaf "error-reason", as such a leaf would be redundant
      with information that is already placed within the
      "error-app-tag".
      
      In case of an rpc error as a result of a "delete-subscription", a
      "kill-subscription", or a "resynch-subscription" request, no
      "error-info" needs to be included, as the "subscription-id" is 
      the only RPC input parameter and no hints regarding this RPC input
      parameters need to be provided.
            ]]></artwork>
    </figure>
    
  </section>
  
  <section title="YANG module" anchor="YANG-module" >
  
    <t>This module references <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/>.</t>
        
    <t>[ note to the RFC Editor - please replace XXXX within this YANG model with the number of this document ]</t>

    <t><figure>
       <artwork><![CDATA[
<CODE BEGINS>file 
"ietf-netconf-subscribed-notifications@2018-04-20.yang"
module ietf-netconf-subscribed-notifications {
  yang-version 1.1;
  namespace 
    "urn:ietf:params:xml:ns:yang:ietf-netconf-subscribed-notifications";

  prefix nsn;

  import ietf-subscribed-notifications {
    prefix sn;
  }
  
  organization "IETF NETCONF (Network Configuration) Working Group";
  contact
    "WG Web:   <http:/tools.ietf.org/wg/netconf/>
     WG List:  <mailto:netconf@ietf.org>
          
     Editor:   Eric Voit
               <mailto:evoit@cisco.com>
     
     Editor:   Alexander Clemm
               <mailto:ludwig@clemm.org>

     Editor:   Alberto Gonzalez Prieto
               <mailto:agonzalezpri@vmware.com>
               
     Editor:   Ambika Prasad Tripathy
               <mailto:ambtripa@cisco.com>
               
     Editor:   Einar Nilsen-Nygaard
               <mailto:einarnn@cisco.com>";


  description
    "Defines NETCONF as a supported transport for subscribed event
    notifications.
    
    Copyright (c) 2018 IETF Trust and the persons identified as authors 
    of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or without 
    modification, is permitted pursuant to, and subject to the license 
    terms contained in, the Simplified BSD License set forth in Section 
    4.c of the IETF Trust's Legal Provisions Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see the RFC 
    itself for full legal notices.";
  
  revision 2018-04-20 {
    description
      "Initial version";
    reference 
    "RFC XXXX: NETCONF Support for Event Notifications";
  }

  identity netconf {
    base sn:transport;
    base sn:inline-address;
    description
      "NETCONF is used as a transport for notification messages and
       state change notifications.";
  }
}
<CODE ENDS> 
            ]]></artwork>
        </figure> 
      </t>
  </section>
  
  <section title="IANA Considerations">
    <t>
    This document registers the following namespace URI in the "IETF XML
    Registry" <xref target="RFC3688"/>:
    </t>

    <t>
    URI:  
    urn:ietf:params:xml:ns:yang:ietf-netconf-subscribed-notifications
    <vspace/>
    Registrant Contact: The IESG.
    <vspace/>
    XML: N/A; the requested URI is an XML namespace.
    </t>
   
    <t>
    This document registers the following YANG module in the "YANG
    Module Names" registry <xref target="RFC6020"/>:
    </t>
    <t>
    Name:         ietf-netconf-subscribed-notifications
    <vspace/>
    Namespace:    
       urn:ietf:params:xml:ns:yang:ietf-netconf-subscribed-notifications
    <vspace/>
    Prefix:       nsn
    <vspace/>
    Reference:    RFC XXXX: NETCONF Support for Event Notifications 
    </t>
  </section>
  
  <section title="Security Considerations">
            
    <t>Notification messages (including state change notifications) are never sent before the NETCONF capabilities exchange has completed.</t>
            
    <t>If a malicious or buggy NETCONF subscriber sends a number of establish-subscription requests, then these subscriptions accumulate and may use up system resources.  In such a situation, subscriptions MAY be terminated by terminating the underlying NETCONF session.  The publisher MAY also suspend or terminate a subset of the active subscriptions on that NETCONF session.</t>

    <t>This draft has a YANG module which consists of a single identity.  As a result additional security concerns beyond those of the imported modules are not introduced.</t>
  </section>
        
  <section title = "Acknowledgments">
     <t>We wish to acknowledge the helpful contributions, comments, and suggestions that were received from: Andy Bierman, Yan Gang, Sharon Chisholm, Hector Trevino, Peipei Guo, Susan Hares, Tim Jenkins, Balazs Lengyel, Martin Bjorklund, Mahesh Jethanandani, Kent Watsen, and Guangying Zheng.</t>
  </section>
        
</middle>
    
<back>
  <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
      <?rfc include="reference.RFC.3688"?>
      <?rfc include="reference.RFC.5277"?>
      <?rfc include="reference.RFC.6020"?>
      <?rfc include="reference.RFC.6241"?>
      <?rfc include="reference.RFC.8071"?>
      <?rfc include="reference.RFC.8174"?>
      <?rfc include="reference.RFC.8342"?>
      
      <reference anchor="I-D.ietf-netconf-yang-push"
                 target="https://datatracker.ietf.org/doc/draft-ietf-netconf-yang-push/">
        <front>
          <title>YANG Datastore Subscription</title>
          <author fullname="A Clemm" initials="Alexander" surname="Clemm"></author>
          <author fullname="E Voit" initials="Eric" surname="Voit"></author>
          <author fullname="A Gonzalez Prieto" initials="Alberto" surname="Gonzalez Prieto"></author>
          <author fullname="Ambika Prasad Tripathy" initials="A" surname="Tripathy"></author>
          <author fullname="Einar Nilsen-Nygaard" initials="E" surname="Nilsen-Nygaard"></author>
          <author fullname="Andy Bierman" initials="A" surname="Bierman"></author>
          <author fullname="B Lengyel" initials="B" surname="Lengyel"></author>
          <date month="June" year="2018"/>
        </front>
      </reference>
        

      <reference anchor="I-D.draft-ietf-netconf-subscribed-notifications">
        <front>
          <title>Customized Subscriptions to a Publisher's Event Streams</title>
          <author fullname="Eric Voit" initials="E" surname="Voit">
            <organization/>
          </author>
          <author fullname="Alexander Clemm" initials="A" surname="Clemm">
            <organization/>
          </author>
          <author fullname="Alberto Gonzalez Prieto" initials="A"
                  surname="Gonzalez Prieto">
            <organization/>
          </author>
          <author fullname="Ambika Prasad Tripathy" initials="A"
                  surname="Tripathy">
            <organization/>
          </author>
          <author fullname="Einar Nilsen-Nygaard" initials="E"
                  surname="Nilsen-Nygaard">
            <organization/>
          </author>
          <date month="July" year="2018"/>
        </front>
        <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-subscribed-notifications-14"/>
        <format target="https://datatracker.ietf.org/doc/draft-ietf-netconf-subscribed-notifications/"
                type="TXT"/>
      </reference>  
      
    </references> 
  
    <references title="Informative References">

      <reference anchor="I-D.draft-ietf-netconf-netconf-client-server">
        <front>
          <title>NETCONF Client and Server Models</title>
          <author fullname="K. Watsen" initials="K" surname="Watsen">
          </author>
          <author fullname="G. Wu" initials="G" surname="Wu"> </author>
          <date month="June" year="2018"/>
        </front>
        <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-netconf-client-server-06"/>
        <format target="https://datatracker.ietf.org/doc/draft-ietf-netconf-netconf-client-server/"
                type="TXT"/>
      </reference>
    </references>

  <section title="Examples">
  
    <t>This section is non-normative.</t>
    
    <section title="Event Stream Discovery">

        <t>As defined in <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> an event stream exposes a continuous set of events available for subscription.  A NETCONF client can retrieve the list of available event streams from a NETCONF publisher using the "get" operation against the top-level container "/streams" defined in <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> Section 3.1.</t>
            
        <t>The following example illustrates the retrieval of the list of available event streams:</t>
            
        <figure align="center" anchor="get-streams" title="Get streams request">       
            <artwork><![CDATA[
<rpc message-id="101"
  xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <get>
    <filter type="subtree">
      <streams
     xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications"/>
    </filter>
  </get>
</rpc>
            ]]></artwork>
        </figure>
            
        <t>After such a request, the NETCONF publisher returns a list of event streams available, as well as additional information which might exist in the container. </t>

    </section>

    <section title="Dynamic Subscriptions">
    
    
      <section title="Establishing Dynamic Subscriptions">
      
        <t>The following figure shows two successful "establish-subscription" RPC requests as per <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/>.  The first request is given a subscription identifier of 22, the second, an identifier of 23.</t>

        <figure anchor = "mess-flow-establishment" 
          title="Multiple subscriptions over a NETCONF session">
          <artwork><![CDATA[
   +------------+                 +-----------+
   | Subscriber |                 | Publisher |
   +------------+                 +-----------+
         |                              |
         |    Capability Exchange       |
         |<---------------------------->|
         |                              |
         |                              |
         |    establish-subscription    |
         |----------------------------->|  (a)
         | RPC Reply: OK, id = 22       |
         |<-----------------------------|  (b)
         |                              |
         | notification message (for 22)|
         |<-----------------------------|
         |                              |
         |                              |
         |    establish-subscription    |
         |----------------------------->|
         | notification message (for 22)|
         |<-----------------------------|
         | RPC Reply: OK, id = 23       |
         |<-----------------------------|
         |                              |
         |                              |
         | notification message (for 22)|
         |<-----------------------------|
         | notification message (for 23)|
         |<-----------------------------|
         |                              |                
          ]]></artwork>
        </figure> 
    
        <t>To provide examples of the information being transported, example messages for interactions (a) and (b) in  <xref target="mess-flow-establishment"/> are detailed below:</t>
    
        <figure align="center" anchor="establish-subs" title="establish-subscription request (a)"> 
          <artwork><![CDATA[
<rpc message-id="102" xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <establish-subscription 
      xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications">
    <stream>NETCONF</stream>
    <stream-xpath-filter xmlns:ex="http://example.com/events">
      /ex:foo/
    </stream-xpath-filter>
    <dscp>10</dscp>
  </establish-subscription>
</rpc>
            ]]></artwork>
        </figure>
        
        <t>As NETCONF publisher was able to fully satisfy the request (a), the publisher sends the subscription identifier of the accepted subscription within message (b):</t>
                
        <figure align="center" anchor="positive-establish-subs" title="establish-subscription success (b)">       
          <artwork><![CDATA[
<rpc-reply message-id="102" 
  xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <identifier 
    xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications">
    22
  </identifier>
</rpc-reply>
           ]]></artwork>
        </figure>               

        <t>If the NETCONF publisher had not been able to fully satisfy the request, or subscriber has no authorization to establish the subscription, the publisher would have sent an RPC error response. For instance, if the "dscp" value of 10 asserted by the subscriber in <xref target="establish-subs"/> proved unacceptable, the publisher may have returned:</t>
            
        <figure align="center" anchor="negative-establish-subs" title="an unsuccessful establish subscription">       
          <artwork><![CDATA[
<rpc-reply message-id="102" 
  xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <rpc-error>
   <error-type>application</error-type>
   <error-tag>operation-failed</error-tag>
   <error-severity>error</error-severity>
   <error-app-tag>
     ietf-subscribed-notifications:dscp-unavailable
   </error-app-tag>    
  </rpc-error>
</rpc-reply>
          ]]></artwork>
        </figure> 
        
        <t>The subscriber can use this information in future attempts to establish a subscription.</t>
        
      </section>
      
      <section title="Modifying Dynamic Subscriptions">
      
        <t>An existing subscription may be modified.  The following exchange shows a negotiation of such a modification via several exchanges between a subscriber and a publisher.  This negotiation consists of a failed RPC modification request/response, followed by a successful one.</t>
    
        <figure anchor = "mess-flow-subs-modification"
                title="Interaction model for successful subscription modification">
          <artwork><![CDATA[                  
   +------------+                 +-----------+
   | Subscriber |                 | Publisher |
   +------------+                 +-----------+
         |                              |
         | notification message (for 23)|
         |<-----------------------------|
         |                              |
         | modify-subscription (id = 23)|
         |----------------------------->|  (c)
         | RPC error (with hint)        |
         |<-----------------------------|  (d)
         |                              |
         | modify-subscription (id = 23)|
         |----------------------------->|
         | RPC Reply: OK                |
         |<-----------------------------|
         |                              |
         | notification message (for 23)|
         |<-----------------------------|
         |                              |          
          ]]></artwork>
        </figure>    
        
        <t>If the subscription being modified in <xref target="mess-flow-subs-modification"/> is a datastore subscription as per <xref target="I-D.ietf-netconf-yang-push"/>, the modification request made in (c) may look like that shown in <xref target="simple-modify-subs"/>.  As can be seen, the modifications being attempted are the application of a new xpath filter as well as the setting of a new periodic time interval.</t>
        
        <figure align="center" anchor="simple-modify-subs" title="Subscription modification request (c)">
          <artwork><![CDATA[
<rpc message-id="303"
  xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <modify-subscription
       xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications"
       xmlns:yp="urn:ietf:params:xml:ns:yang:ietf-yang-push">
    <identifier>23</identifier>
    <yp:datastore-xpath-filter xmlns="http://example.com/datastore"> 
        /interfaces-state/interface/oper-status
    </yp:datastore-xpath-filter>
    <yp:periodic>
      <yp:period>500</yp:period>
    </yp:periodic> 
  </modify-subscription>
</rpc>
          ]]></artwork>
        </figure>
    
        <t>If the NETCONF publisher can satisfy both changes, the publisher sends a positive result for the RPC. If the NETCONF publisher cannot satisfy either of the proposed changes, the publisher sends an RPC error response (d).  The following is an example RPC error response for (d) which includes a hint. This hint is an alternative time period value which might have resulted in a successful modification:</t>
        
        <figure align="center" anchor="negative-modify-subs" title="Modify subscription failure with Hint (d)">       
          <artwork><![CDATA[
<rpc-reply message-id="303"
  xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <rpc-error>
    <error-type>application</error-type>
    <error-tag>operation-failed</error-tag>
    <error-severity>error</error-severity>
    <error-app-tag>
        ietf-yang-push:period-unsupported 
    </error-app-tag>
    <error-info
       xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-push">
       <modify-subscription-datastore-error-info>
         <period-hint>
             3000
         </period-hint>
       </modify-subscription-datastore-error-info>
    </error-info>
  </rpc-error>
</rpc-reply>
          ]]></artwork>
        </figure>        
    

    
     
      </section>
    
      <section title="Deleting Dynamic Subscriptions">
      
      <t>The following demonstrates deleting a subscription.  This subscription may have been to either a stream or a datastore.</t>
                    
      <figure align="center" anchor="simple-delete-subs" title="Delete subscription"> 
        <artwork><![CDATA[
<rpc message-id="103"
  xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <delete-subscription
    xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications">
    <identifier>22</identifier>
  </delete-subscription>
</rpc> 
        ]]></artwork>
      </figure>
                
      <t>If the NETCONF publisher can satisfy the request, the publisher replies with success to the RPC request.</t>
            

      <t>If the NETCONF publisher cannot satisfy the request, the publisher sends an error-rpc element indicating the modification didn't work. <xref target="negative-delete-subs"/> shows a valid response for existing valid subscription identifier, but that subscription identifier was created on a different NETCONF transport session:</t>
                
      <figure align="center" anchor="negative-delete-subs" title="Unsuccessful delete subscription">       
        <artwork><![CDATA[
<rpc-reply message-id="103"
  xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <rpc-error>
    <error-type>application</error-type>
    <error-tag>operation-failed</error-tag>
    <error-severity>error</error-severity>
    <error-app-tag>
        ietf-subscribed-notifications:no-such-subscription
    </error-app-tag>
  </rpc-error>
</rpc-reply>
          ]]></artwork>
        </figure>     
    
      </section>
    
    </section>

    <section title="Configured Subscriptions">
    
      <t>Configured subscriptions may be established, modified, and deleted using configuration operations against the top-level subtree of <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/> or <xref target="I-D.ietf-netconf-yang-push"/>.</t>
        
      <t>In this section, we present examples of how to manage the configuration subscriptions using a NETCONF client.</t>

      <section title="Creating Configured Subscriptions">
    
        <t>For subscription creation, a NETCONF client may send:</t>
                
        <figure align="center" anchor="create-config-subs" title="Create a configured subscription">       
          <artwork><![CDATA[
<rpc message-id="201" xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <edit-config>
    <target>
      <running/>
    </target>
    <default-operation>none</default-operation>
    <config>
      <subscriptions 
      xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications">
        <subscription>
          <identifier>1922</identifier>
          <transport xmlns:nsn=
    "urn:ietf:params:xml:ns:yang:ietf-netconf-subscribed-notifications">
            nsn:netconf
          <transport>
          <stream>NETCONF</stream>
          <receivers>
            <receiver>
              <name>receiver1</name>
            </receiver>
          </receivers>
        </subscription>
      </subscriptions>
    </config>
  </edit-config>
</rpc>
          ]]></artwork>
        </figure>
                    
        <t>If the request is accepted, the publisher will indicate this. If the request is not accepted because the publisher cannot serve it, no configuration is changed.  In this case the publisher may reply:</t>
                    
        <figure align="center" anchor="failed-establish-config-subs" title="Response to a failed configured subscription establishment">       
          <artwork><![CDATA[
<rpc-reply message-id="201" 
  xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <rpc-error>
    <error-type>application</error-type>
    <error-tag>resource-denied</error-tag>
    <error-severity>error</error-severity>
    <error-message xml:lang="en">
      Temporarily the publisher cannot serve this
      subscription due to the current workload.
    </error-message>
  </rpc-error>
</rpc-reply>
          ]]></artwork>
        </figure>
        
        <t>After a subscription has been created, NETCONF connectivity to each receiver will be established if it does not already exist.  This will be accomplished through the association on the publisher with the networking parameters needed to establish connectivity with each configured receiver.  These parameters will be used as needed by NETCONF call home <xref target="RFC8071"/>.</t>
         
        <t>The following figure shows the interaction model for the successful creation of a configured subscription.</t>
  
        <figure anchor = "mess-flow-subs-establishment-config" 
                title="Interaction model for configured subscription establishment">
          <artwork><![CDATA[                               
 +----------+                 +-----------+     +---------+   
 |Config Ops|                 | Publisher |     |Receiver1|   
 +----------+                 +-----------+     +---------+   
      |                            |                |   
      |    Capability Exchange     |                |            
      |<-------------------------->|                |            
      |                            |                |            
      |                            |                |         
      |        Edit-config         |                |          
      |--------------------------->|                |           
      |       RPC Reply: OK        |                |            
      |<---------------------------|                |  
      |                            |   Call Home    |            
      |                            |<-------------->|            
      |                            |                |          
      |                            |  subscription- |           
      |                            |  started       |           
      |                            |--------------->|          
      |                            |                |        
      |                            |  notification  |           
      |                            |  message       |            
      |                            |--------------->|                    
          ]]></artwork>
        </figure>

      </section>
      
      <section title="Modifying Configured Subscriptions">
      
        <t>Configured subscriptions can be modified using configuration operations against the top-level container "/subscriptions".</t>
                
        <t>For example, the subscription established in the previous section could be modified as follows, here a adding a second receiver:</t>

        <figure align="center" anchor="modify-configured-subs" title="Modify configured subscription">          
          <artwork><![CDATA[
<rpc message-id="202" xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <edit-config>
    <target>
      <running/>
    </target>
    <config>
      <subscriptions 
      xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications">
        <subscription>
          <identifier>
            1922
          </identifier>
          <receivers>
            <receiver>
              <name>receiver2</name>
            </receiver>
          </receivers>
        </subscription>
      </subscriptions>
    </config>
  </edit-config>
</rpc>
           ]]></artwork>
        </figure>
                
        <t>If the request is accepted, the publisher will indicate success.  The result is that the interaction model described in <xref target="mess-flow-subs-establishment-config"/> may be extended as follows.</t>            
        <figure anchor = "mess-flow-subs-modification-configured"
               title="Interaction model for configured subscription modification">
          <artwork><![CDATA[                               
 +----------+                 +-----------+     +---------+  +---------+
 |Config Ops|                 | Publisher |     |Receiver1|  |Receiver2|
 +----------+                 +-----------+     +---------+  +---------+
       |                            |  notification  |            |
       |                            |  message       |            |
       |                            |--------------->|            |
       |        Edit-config         |                |            |
       |--------------------------->|                |            |
       |       RPC Reply: OK        |                |            |
       |<---------------------------|                |            |
       |                            |  subscription- |            |
       |                            |  started       |            |
       |                            |---------------------------->|
       |                            |                |            |
       |                            |  notification  |            |
       |                            |  message       |            |
       |                            |--------------->|            |
       |                            |---------------------------->|
       |                            |                |            |     
          ]]></artwork>
        </figure>

        <t>Note in the above that in the specific example above, modifying a configured subscription actually resulted in "subscription-started" notification.  And because of an existing NETCONF session, no additional call home was needed.  Also note that if the edit of the configuration had impacted the filter, a separate modify-subscription would have been required for the original receiver.</t>
            
      </section>
    
      <section title="Deleting Configured Subscriptions">
      
        <t>Configured subscriptions can be deleted using configuration operations against the top-level container "/subscriptions".  Deleting the subscription above would result in the following flow impacting all active receivers.</t>
    
        <figure anchor="mess-flow-subs-deletion-configured"
           title="Interaction model for configured subscription deletion">
           <artwork><![CDATA[
                               
 +----------+                 +-----------+     +---------+  +---------+
 |Config Ops|                 | Publisher |     |Receiver1|  |Receiver2|
 +----------+                 +-----------+     +---------+  +---------+
       |                            |                |            |
       |                            |  notification  |            |
       |                            |  message       |            |
       |                            |--------------->|            |
       |                            |---------------------------->|
       |                            |                |            |
       |        Edit-config         |                |            |
       |--------------------------->|                |            |
       |       RPC Reply: OK        |                |            |
       |<---------------------------|                |            |
       |                            |  subscription- |            |
       |                            |  terminated    |            |
       |                            |--------------->|            |
       |                            |---------------------------->|
       |                            |                |            |
           
         ]]></artwork>
        </figure>    
    
      </section>
    
    </section>    

    <section title="Subscription State Notifications">
    
       <t>A publisher will send subscription state notifications according to the definitions within <xref target="I-D.draft-ietf-netconf-subscribed-notifications"/>).</t>

      <section title="subscription-started and subscription-modified">
      
                  
        <t>A "subscription-started" over NETCONF encoded in XML would look like:</t>    
                        
        <figure align="center" anchor="subscription-started-ctrl-plane-notif" 
                title="subscription-started subscription state notification">       
          <artwork><![CDATA[
<notification xmlns="urn:ietf:params:xml:ns:netconf:notification:1.0">
  <eventTime>2007-09-01T10:00:00Z</eventTime>
  <subscription-started 
      xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications">
    <identifier>39</identifier>
    <transport xmlns:nsn=
    "urn:ietf:params:xml:ns:yang:ietf-netconf-subscribed-notifications">
      nsn:netconf
    <transport>
    <stream-xpath-filter xmlns:ex="http://example.com/events">
      /ex:foo
    </stream-xpath-filter>
    <stream>NETCONF</stream>
  </subscription-started>
</notification>
           ]]></artwork>
        </figure>

        <t>The "subscription-modified" is identical to <xref target="subscription-started-ctrl-plane-notif"/>, with just the word "started" being replaced by "modified".</t>
    
      </section>
      
      <section title="subscription-completed, subscription-resumed, and replay-complete">
    
        <t>A "subscription-completed" would look like:</t>    
                
        <figure align="center" 
                anchor="subscription-completed" 
                title="subscription-completed notification in XML">       
          <artwork><![CDATA[
<notification
  xmlns="urn:ietf:params:xml:ns:netconf:notification:1.0">
  <eventTime>2007-09-01T10:00:00Z</eventTime>
  <subscription-completed
    xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications">
    <identifier>39</identifier>
  </subscription-completed>
</notification>
           ]]></artwork>
        </figure>
                
        <t>The "subscription-resumed" and "replay-complete" are virtually identical, with "subscription-completed" simply being replaced by "subscription-resumed" and "replay-complete".</t>
    
      </section>
    
      <section title="subscription-terminated and subscription-suspended">

        <t>A "subscription-terminated" would look like:</t>    
                
        <figure align="center" 
                anchor="subscription-terminated" 
                title="subscription-terminated subscription state notification">       
                    <artwork><![CDATA[
<notification
  xmlns="urn:ietf:params:xml:ns:netconf:notification:1.0">
  <eventTime>2007-09-01T10:00:00Z</eventTime>
  <subscription-terminated
    xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications">
    <identifier>39</identifier>
    <error-id>
       suspension-timeout
    </error-id>
  </subscription-terminated>
</notification>
          ]]></artwork>
        </figure>
                
        <t>The "subscription-suspended" is virtually identical, with "subscription-terminated" simply being replaced by "subscription-suspended".</t>
 
      </section>

    </section>
    
  </section>
    
  <section title="Changes between revisions">
    <t>(To be removed by RFC editor prior to publication)</t>

    <section title="v09 to v10">
      <t><list style="symbols">                
        <t>Tweaks to examples and text.</t>
        <t>Downshifted state names.</t>
        <t>Removed address from examples.</t>
      </list></t>
    </section>
    <section title="v08 to v09">
      <t><list style="symbols">                
        <t>Tweaks based on Kent's comments.</t>
        <t>Updated examples in Appendix A.  And updates to some object names based on changes in the subscribed-notifications draft.</t>
        <t>Added a YANG model for the NETCONF identity.</t>
      </list></t>
    </section>
    <section title="v07 to v08">
      <t><list style="symbols">                
        <t>Tweaks and clarification on :interleave.</t>
      </list></t>
    </section>
    <section title="v06 to v07">
      <t><list style="symbols">                
        <t>XML encoding and operational datastore mandatory.</t>
        <t>Error mechanisms and examples updated.</t>
      </list></t>
    </section>
    <section title="v05 to v06">
      <t><list style="symbols">                
        <t>Moved examples to appendices</t>
        <t>All examples rewritten based on namespace learnings</t>
        <t>Normative text consolidated in front</t>
        <t>Removed all mention of JSON</t>
        <t>Call home process detailed</t>
        <t>Note: this is a major revision attempting to cover those comments received from two week review.</t>
      </list></t>
    </section>
    <section title="v03 to v04">
      <t><list style="symbols">                
        <t>Added additional detail to "configured subscriptions"</t>
        <t>Added interleave capability</t>
        <t>Adjusted terminology to that in draft-ietf-netconf-subscribed-notifications</t>
        <t>Corrected namespaces in examples</t>
      </list></t>
    </section>
    <section title="v01 to v03">
      <t><list style="symbols">
        <t>Text simplifications throughout</t>
        <t>v02 had no meaningful changes</t>
      </list></t>
    </section>
    <section title="v00 to v01">
      <t><list style="symbols">
        <t>Added Call Home in solution for configured subscriptions.</t>
        <t>Clarified support for multiple subscription on a single session. No need to support multiple create-subscription.</t>
        <t>Added mapping between terminology in yang-push and <xref target="RFC6241"/> (the one followed in this document).</t>
        <t>Editorial improvements.</t>
      </list></t>
    </section>
  </section>

</back>
</rfc>
